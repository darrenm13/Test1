---
layout:     post
title:      Post Headline
date:       2015-10-18 11:35:00
author:     Darren Maguire
tags: 		result
---
<!-- Start Writing Below in Markdown -->


**Crystal Plasticity Codes**
================================
 
This page will present code on how to match crstyal plasticity codes, using Matlab, Dream3D, and Abaqus. 
------------------------------------------------------------------------
---

#Summary

{{ page.json }}

The crystal placticity codes are modeled in Dream3D [1] , and need to be inputted into Abacus, a finite element analysis program [2], to determine how they will behave under different loading conditions.  The first matlab code gives the code that creates the node text file, which designate points in 3D space in abacus. The next code creates the element text file, which reads the node file and creates blocks from 8 nodes. The next code creates the node sets, which are the nodes that make up the six faces. The codes are all explained in more detail below. After the 

**Code for Node file:**

The input for this function is the dimension of the cube and the name of the node text file. 
 
	function [] = nodefile(in,node)
	x = (in+1)^3;
	y = (in+1)^2;
	z = (in+1);     
	cell_array = cell(x,4);      
    for i = 1:x
        cell_array(i,1) = {num2str(i)};
    end
	t = 1;
    for i = 1:y
        j = 0;
        while j < z
        cell_array(t,2) = {num2str(j)};
        j = j+1;
        t = t +1;
        end
    end
    
    d = 1;
    j = 0;
    for i = 1:y
        j = j+1;
        if j > z
            j = 1;
        end
        t = 0;
        while t < z 
        cell_array(d,3) = {num2str(j-1)};
        t = t +1 ;
        d = d + 1;
        end
    end

    j = 0;
    d = 1;
    for i = 1:z
        t = 0;
        j = j+1;
        while t < y 
            cell_array(d,4) = {num2str(j-1)};
            t = t+1;
            d = d+1;
        end
    end

	testfile = cell_array;

    for i = 1:x
        for j = 2:3
            lol = testfile{i,j};
            lol(end+1) = '.';
            lol(end+1) = ',';
            testfile{i,j} = lol;
        end
    end
    
    for i = 1:x
        help = testfile{i,4};
        help(end+1) = '.';
        testfile{i,4} = help;
    end
    
    for i = 1:x
        not = testfile{i,1};
        not(end+1) = ',';
        testfile{i,1} = not;
    end

	fileID = fopen(node,'w');

    for i = 1:x
        for j = 1:4
        fprintf(fileID,'%s',testfile{i,j});
        end
        fprintf(fileID,'\n',testfile{i,:});
    end

**Code for Element file:**
The input is the dimension of the cube and the name of the element text file.
		
	function [] = element(in,element)
	x = ((in+1)^2)+in+2;
	y = (in^2);
	z = (in^3);
	cell_array = cell(y,9);
	for i = 1:z
	    cell_array{i,1} = i;
	end
    cell_array{1,2} = x;
    cell_array{1,3} = x-(in+1);
    cell_array{1,4} = 1;
    cell_array{1,5} = 2 + in;
    cell_array{1,6} = x + 1;
    cell_array{1,7} = x - in;
    cell_array{1,8} = 2;
    cell_array{1,9} = 3+in;
	a = 1;
	b = 2;
	    for f = 2:9
	        for i = 1:(in-1)
	            cell_array{i+1,f} = cell_array{i,f} + a;
	        end
		    for i = 1:in:(in^3)
		      cell_array{i+in,f}=cell_array{i+in-1,f}+b;
	            for j = 1:(in-1)
	                j = j-1;                
	cell_array{i+in+1+j,f} = cell_array{i+in+j,f} + 1;
	            end
	        end
	        for j = 1:(in-1)
	            cst2 = 0;
	            for i = 1:(in^2)
	                cst = (1+in)*j;
	                cst2 = ((in^2)+i)+((j-1)*in^2);
	      cell_array{cst2,f} = cell_array{cst2,f} + cst;
	            end
	        end
	    end
    
    x = cell_array(1:z,1:9);
    
	for i = 1:(in^3)
	    for j = 1:9
	        x{i,j} = num2str(x{i,j});
	    end
	end
	
		for i = 1:(in^3)
	    for j = 1:8
	        lol = x{i,j};
	        lol(end+1) = ',';
	        x{i,j} = lol;
	    end
	end

	fileID = fopen(element,'w');

    for i = 1:z
    for j = 1:9
        fprintf(fileID,'%s',x{i,j});
    end
        fprintf(fileID,'\n',x{i,:});
    end

**Node Set Code**
The input is the dimension of the cube and the name of the nodeset text file. 
		
		function [] = nodeset(in,set)
		x0 = in+1;
	    x1 = (in+1)^2;
	    x2 = ((in+1)^3 - (in+1)^2 +1);
	    x3 = (in+1)^3;
	    k1 = 1:x1;
	    k2 = x2:x3;
	    
    main_vec = cell(6,x1);
    
    %XY In CELL
    for i = 1:2
            for j = 1:x1
                if i == 1
                main_vec{i,j} = k1(j);
                elseif i == 2
                main_vec{i,j} = k2(j);
                end
            end
    end
    
    %XZ in vector
    xz = 1:(in+1);
    vecxz1 = [];
        for j = 1:x0
            keep = xz+((in+1)^2)*(j-1);
            vecxz1 = [ vecxz1 keep];  
        end
	for i = 1:x1
	    main_vec{3,i} = vecxz1(i);
	end
	    xz2 = (in+1)^2 - in;
	    helpme = xz2:x1;
	    vecxz2 = [];
	        for j = 1:x0
	            keep = helpme+((in+1)^2)*(j-1);
	            vecxz2 = [ vecxz2 keep];
	        end     
	    for i = 1:x1
	        main_vec{4,i} = vecxz2(i);
	    end   
	        
    %%YZ in vector
    yz = 1:x0:(x1-in);
    vecyz = [];
        for j = 1:x0
            keep = yz+((in+1)^2)*(j-1);
            vecyz = [ vecyz keep];  
        end
        
        for i = 1:x1
            main_vec{5,i} = vecyz(i);
        end
        
     yz2 = x0:x0:x1;
     vecyz2 = [];
        for j = 1:x0
            keep = yz2+((in+1)^2)*(j-1);
            vecyz2 = [ vecyz2 keep];
        end
        
        for i = 1:x1
            main_vec{6,i} = vecyz2(i);
        end
    
	 fileID = fopen(set,'w');


    for i = 1:6
        for j = 1:x1
	        main_vec{i,j} = num2str(main_vec{i,j});
	        lol = main_vec{i,j};
	        lol(end+1) = ',';
	        main_vec{i,j} = lol;
        end
    end

    for i = 1:6
        if i == 1 || i == 2
	         fprintf(fileID,'*Nset, nset= xy%d',i);
	         fprintf(fileID,'\n');
        elseif i == 3 || i == 4
	         fprintf(fileID,'*Nset, nset= xz%d',i-2);
	         fprintf(fileID,'\n');
        elseif i == 5 || i == 6
	         fprintf(fileID,'*Nset, nset= yz%d',i-4);
	         fprintf(fileID,'\n');
        end
         yy = 0;
         counter = 0;
        for j = 1:x1
	        x = main_vec{i,j};
	        fprintf(fileID,'%s',x);
	        yy = yy+1;
	        counter = counter+1;
		        if yy == 12
		            fprintf(fileID,'\n');
		            yy = 0;
		        end
		        if counter == x1
		            fprintf(fileID,'\n**\n');
		        end
	        end
        
	    end
	end

---


#Links:

[More on DREAM3D][1]
[More on Abaqus][2]

[1]:http://dream3d.bluequartz.net/?page_id=71
[2]:http://www.3ds.com/products-services/simulia/products/abaqus/



#Images

![roll over to expand](https://lh3.googleusercontent.com/B2X71nesIGE53XNSBeobkTjQYCVpphQFe2lEA-FirA=s1000 "Screenshot 2015-10-19 11.41.52.png")

